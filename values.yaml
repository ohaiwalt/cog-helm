# Default values for cog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  pullPolicy: IfNotPresent

## Configure Docker Registry login credentials for private repositories
RELAY_DOCKER_REGISTRY_EMAIL:
RELAY_DOCKER_REGISTRY_USER:
RELAY_DOCKER_REGISTRY_PASSWORD:

##
## COG
##
cog:
  name: cog
  serviceType: ClusterIP
  replicaCount: 1
  image:
    repository: operable/cog
    tag: 1.0.1

  resources:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Adds an ingress in front of Nginx
  ingress:
    enabled: false

    # annotations:
    #   kubernetes.io/tls-acme: true
    #   kubernetes.io/ingress.class: nginx
    # tls:
    # - hosts:
    #   - cog.example.com
    #   secretName: cog-tls

  ## Config values snake-case for templating delimiter
  config:

    ## Chat provider toggle
    ## Only one can be 'true' at a time
    COG_SLACK_ENABLED: true
    # COG_HIPCHAT_ENABLED:

    ## Hipchat specific configuration
    # COG_HIPCHAT_API_TOKEN:
    # COG_HIPCHAT_JABBER_ID:
    # COG_HIPCHAT_NICKNAME:
    # COG_HIPCHAT_ROOMS:
    # COG_HIPCHAT_USER_API_TOKEN:
    # COG_HIPCHAT_USER_JABBER_ID:
    # COG_HIPCHAT_USER_NICKNAME:

    ## 
    MIX_ENV: prod

    COG_ALLOW_SELF_REGISTRATION: 1
    COG_MQTT_HOST: 0.0.0.0
    COG_MQTT_PORT: 1883

    COG_API_URL_BASE: cog.example.com
    ## Cog usually represents these endpoints as separate ports
    ## Configuring the url-base allows them on the same domain
    COG_SERVICE_URL_BASE: cog.example.com/service
    COG_TRIGGER_URL_BASE: cog.example.com/trigger

    ## These variables are used to configure an initial admin account
    # COG_BOOTSTRAP_CHAT_HANDLE:
    COG_BOOTSTRAP_USERNAME: admin
    COG_BOOTSTRAP_EMAIL_ADDRESS: cog@localhost
    COG_BOOTSTRAP_FIRST_NAME: Cog
    COG_BOOTSTRAP_LAST_NAME: Administrator

    ## send anonymized user data back to Operable
    COG_TELEMETRY: false

  ## Secrets don't like '-'
  secrets:
    SLACK_API_TOKEN:
    DATABASE_URL: 'ecto://cog:cog@postgresql:5432/cog'
    COG_BOOTSTRAP_PASSWORD:
    COG_HIPCHAT_JABBER_PASSWORD:
    COG_HIPCHAT_USER_JABBER_PASSWORD:

##
## RELAY
##
relay:
  name: relay
  replicaCount: 1
  image:
    repository: operable/relay
    tag: latest

  resources:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  config:
    RELAY_ID: 00000000-0000-0000-0000-000000000000
    RELAY_MANAGED_DYNAMIC_CONFIG: true
    RELAY_DYNAMIC_CONFIG_ROOT: /tmp/bundle_configs
    RELAY_COG_REFRESH_INTERVAL: 30s
    RELAY_DOCKER_CLEAN_INTERVAL: 1m
    RELAY_LOG_LEVEL: info

  ## Secrets don't like '-'
  secrets:
    RELAY_COG_TOKEN:

nginx:
  name: nginx
  replicaCount: 1
  image:
    repository: nginx
    tag: 1.11
  resources:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  serviceType: LoadBalancer

##
## POSTGRES
##

postgres:
  name: postgres
  replicaCount: 1
  image:
    repository: postgres
    tag: 9.6.2
  resources:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi  
  serviceType: ClusterIP

  config:
    PGUSER: cog
    POSTGRES_USER: cog
    POSTGRES_DB: cog
    POSTGRES_INITDB_ARGS:

  secrets:
    POSTGRES_PASSWORD: cog

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim:

  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  accessMode: ReadWriteOnce
  size: 8Gi
  subPath: "postgresql-db"
